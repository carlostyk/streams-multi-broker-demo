version: "3.8"

services:

  labs-nats:
    image: nats:2.10.14
    restart: always
    ports:
      - "4222:4222"
      - "6222:6222"
      - "8222:8222"
    command:
      - "-js"
    networks:
      - tyk

  labs-zookeeper:
    restart: always
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - tyk

  labs-kafka:
    restart: always
    image: docker.io/bitnami/kafka:3.3
    container_name: kafka
    ports:
      - "9093:9093"
      - "9092:9092"
    volumes:
      - "kafka-data:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=labs-zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://localhost:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - labs-zookeeper
    networks:
      - tyk

  rabbitmq:
    image: rabbitmq:4
    container_name: rabbitmq
    ports:
      - 5671:5671
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./definitions.json:/etc/rabbitmq/definitions.json
    environment:
      RABBITMQ_LOAD_DEFINITIONS: "true"
      RABBITMQ_DEFINITIONS_FILE: "/etc/rabbitmq/definitions.json"
    networks:
      - tyk
  tyk-dashboard:
    image: tykio/tyk-dashboard:v5.8.1-alpha1
    container_name: tyk-dashboard
    environment:
      - TYK_DB_LICENSEKEY=${DASH_LICENSE:?License key missing from Docker environment file "".env" file.  Review The Getting Started steps in README.md.}
      - TYK_DB_STORAGE_MAIN_TYPE=postgres
      - TYK_DB_STORAGE_MAIN_CONNECTIONSTRING=user=postgres password=topsecretpassword host=tyk-postgres port=5432 database=tyk_analytics
    depends_on:
      tyk-postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
    env_file:
      - ./confs/tyk_analytics.env
    networks:
      - tyk

  tyk-gateway:
    image: tykio/tyk-gateway-ee:v5.8.1-alpha1
    container_name: tyk-gateway
    ports:
      - "8081:8080"
    env_file:
      - ./confs/tyk.env
    networks:
      - tyk

  tyk-pump:
    image: tykio/tyk-pump-docker-pub:v1.11.0
    container_name: tyk-pump
    env_file:
      - ./confs/pump.env
      - ./confs/pump.postgres.env
    depends_on:
      tyk-postgres:
        condition: service_healthy
    networks:
      - tyk

  tyk-redis:
    image: redis
    container_name: tyk-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - tyk

  tyk-postgres:
    image: postgres:latest
    container_name: tyk-postgres
    environment:
      - POSTGRES_DB=tyk_analytics
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=topsecretpassword
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - tyk
  
networks:
  tyk:

volumes:
  kafka-data:
  zookeeper-data:
  rabbitmq_data:
  redis-data:
  postgres-data:
  # nats_data:/tmp/nats/jetstream